buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        maven {
            name = "jitpack"
            url = "https://jitpack.io/"
        }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://repo.sk1er.club/repository/maven-public/" }
        maven { url "https://repo.spongepowered.org/repository/maven-public/" }
    }
    dependencies {
        classpath "com.github.asbyth:ForgeGradle:6f53277"
        classpath "com.github.jengelman.gradle.plugins:shadow:6.1.0"
        classpath "gg.essential:loader-launchwrapper:1.1.3"
    }
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "com.github.johnrengelman.shadow"

version = "version"
group = "me.ililyth" //http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ExampleMod" //name of the output jar

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

sourceSets {
    main {
        output.resourcesDir = java.outputDir
    }
}

compileJava.options.encoding = "UTF-8"

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
}

configurations {
    embed
    implementation.extendsFrom(embed)
}

repositories {
    mavenCentral()
    maven { url = "https://repo.essential.gg/repository/maven-public/" }
    maven { url = "https://jitpack.io/" }
    maven { url = "https://repo.spongepowered.org/repository/maven-public/" }
}

dependencies {
    embed "gg.essential:loader-launchwrapper:1.1.3"
    compileOnly "gg.essential:essential-1.8.9-forge:12174+g776a77319"
    compileOnly "gg.essential:vigilance-1.8.9-forge:195"

}

jar {
    enabled = false
}

shadowJar {
    archiveClassifier.set("")
    duplicatesStrategy DuplicatesStrategy.EXCLUDE //prevent duplicates
    configurations = [project.configurations.embed]

    manifest.attributes(
            'FMLCorePluginContainsFMLMod': true,
            "ForceLoadAsMod": true,
            'ModSide': 'CLIENT'
    )
}

reobfJar.dependsOn tasks.shadowJar

reobf {
    shadowJar {
        mappingType = 'SEARGE'
    }
}

processResources {
    //this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    //replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        //replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }

    from(file("LICENSE"))
}